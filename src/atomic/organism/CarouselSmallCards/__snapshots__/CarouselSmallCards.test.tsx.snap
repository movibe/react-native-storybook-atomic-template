// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Organisms/CarouselSmallCards should render snapshot 1`] = `
<View
  style={
    Array [
      Object {
        "backgroundColor": "#fff",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "height": "100vh",
      },
    ]
  }
>
  <View
    accessible={false}
    style={
      Array [
        undefined,
        Object {
          "alignItems": undefined,
          "borderColor": undefined,
          "borderWidth": 0,
          "flex": 1,
          "flexDirection": "column",
          "justifyContent": undefined,
          "padding": 10,
        },
      ]
    }
    testID="View_View"
  >
    <View
      accessible={false}
      style={
        Array [
          Object {
            "alignItems": undefined,
            "borderColor": undefined,
            "borderWidth": 0,
            "flex": undefined,
            "flexDirection": "row",
            "justifyContent": undefined,
            "padding": undefined,
          },
          undefined,
        ]
      }
      testID="View_CarouselSmallCards"
    >
      <RCTScrollView
        activeAnimationOptions={null}
        activeAnimationType="timing"
        activeSlideAlignment="center"
        activeSlideOffset={20}
        apparitionDelay={0}
        automaticallyAdjustContentInsets={false}
        autoplay={false}
        autoplayDelay={1000}
        autoplayInterval={3000}
        callbackOffsetMargin={5}
        containerCustomStyle={Object {}}
        contentContainerCustomStyle={Object {}}
        contentContainerStyle={
          Array [
            Object {
              "paddingLeft": 325,
              "paddingRight": 325,
            },
            Object {},
          ]
        }
        data={
          Array [
            Object {
              "gradient": false,
              "image": Object {
                "uri": "teste",
              },
              "text": "Oi",
            },
          ]
        }
        decelerationRate="fast"
        directionalLockEnabled={true}
        disableVirtualization={false}
        enableMomentum={false}
        enableSnap={true}
        firstItem={0}
        getItem={[Function]}
        getItemCount={[Function]}
        hasParallaxImages={false}
        horizontal={true}
        inactiveSlideOpacity={0.7}
        inactiveSlideScale={0.9}
        inactiveSlideShift={0}
        initialNumToRender={13}
        invertStickyHeaders={false}
        inverted={false}
        itemWidth={100}
        keyExtractor={[Function]}
        layout="default"
        lockScrollTimeoutDuration={1000}
        lockScrollWhileSnapping={false}
        loop={false}
        loopClonesPerSide={3}
        maxToRenderPerBatch={27}
        numColumns={1}
        onContentSizeChange={[Function]}
        onEndReachedThreshold={2}
        onLayout={[Function]}
        onMomentumScrollEnd={[Function]}
        onResponderRelease={[Function]}
        onScroll={[Function]}
        onScrollBeginDrag={[Function]}
        onScrollEndDrag={[Function]}
        onSnapToItem={[Function]}
        onStartShouldSetResponderCapture={[Function]}
        onTouchEnd={[Function]}
        onTouchStart={[Function]}
        overScrollMode="never"
        pinchGestureEnabled={false}
        removeClippedSubviews={true}
        renderItem={[Function]}
        scrollEnabled={true}
        scrollEventThrottle={1}
        scrollsToTop={false}
        shouldOptimizeUpdates={true}
        showsHorizontalScrollIndicator={false}
        showsVerticalScrollIndicator={false}
        slideStyle={Object {}}
        sliderWidth={750}
        stickyHeaderIndices={Array []}
        style={
          Object {
            "flexDirection": "row",
            "width": 750,
          }
        }
        swipeThreshold={20}
        updateCellsBatchingPeriod={50}
        useScrollView={false}
        vertical={false}
        viewabilityConfigCallbackPairs={Array []}
        windowSize={27}
      >
        <View>
          <View
            onLayout={[Function]}
            style={
              Array [
                Object {
                  "flexDirection": "row",
                },
                null,
              ]
            }
          >
            <View
              pointerEvents="box-none"
              style={
                Object {
                  "opacity": 1,
                  "transform": Array [
                    Object {
                      "scale": 1,
                    },
                  ],
                  "width": 100,
                }
              }
            >
              <View
                accessible={false}
                focusable={false}
                isTVSelectable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "borderRadius": 10,
                    "height": 126,
                    "opacity": 1,
                    "overflow": "hidden",
                    "shadowColor": "rgba(0,0,0,0.2)",
                    "shadowOffset": Object {
                      "height": 5,
                      "width": 0,
                    },
                    "shadowOpacity": 1,
                    "shadowRadius": 15,
                    "width": 100,
                  }
                }
                testID="TouchableOpacity_CarouselSmallCards_item"
              >
                <View
                  accessibilityIgnoresInvertColors={true}
                  style={
                    Array [
                      Object {
                        "flexBasis": 0,
                        "flexGrow": 1,
                        "flexShrink": 1,
                        "justifyContent": "flex-end",
                        "overflow": "hidden",
                      },
                    ]
                  }
                >
                  <Image
                    source={
                      Object {
                        "uri": "teste",
                      }
                    }
                    style={
                      Array [
                        Object {
                          "bottom": 0,
                          "left": 0,
                          "position": "absolute",
                          "right": 0,
                          "top": 0,
                        },
                        Object {
                          "height": undefined,
                          "width": undefined,
                        },
                        undefined,
                      ]
                    }
                  />
                  <Text
                    accessible={false}
                    style={
                      Array [
                        Object {
                          "color": "#444",
                          "fontSize": 12,
                          "textTransform": "none",
                        },
                        Object {
                          "color": "#fff",
                          "fontSize": 14,
                          "fontWeight": "bold",
                          "marginBottom": 10,
                          "marginLeft": 10,
                          "marginRight": 10,
                          "marginTop": 10,
                        },
                      ]
                    }
                    testID="Text_CarouselSmallCards_item"
                  >
                    Oi
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
      </RCTScrollView>
    </View>
  </View>
</View>
`;
